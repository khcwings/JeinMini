# 로그인
  - 패스워드 3개월 변경
  - 패스워드 5회이상 틀린 경우 잠김
  - 패스워드 초기화(메일 사용)
  - 쿠키를 이용한 ID 저장 : 완료
  - 로그인 관련 히스토리 저장

# 메뉴 
  - 메인 페이지
  - 관리자 페이지
    - 메뉴 등록
    - 권한 생성
    - 권한별 메뉴 등록
    - 메뉴별 하위 Data 호출 URL 등록
    - 유저별 권한 등록
    - 공통 코드 관리
    - 유저 관리
      - 유저 등록 및 변경      
  
# 권한 관리
  - Interceptor를 이용한 로그인/권한 체크

# 그리드

# UTIL 
  1. Key Generator - (완료)
     - UUID를 이용한 32자리 String Key/16자리 이하의 long type Key 생성
  
# Service
  - 암호화 : SHA-256, AES-128, AES-256를 이용한 암/복호화 서비스 개발 - (완료)
  - 메일 발송 : SMTP를 이용한 메일 발송 - (완료)
  
# File Upload / File Download
  1. resources/properties/file/file-{Profile}.properties 설정
  2. file.upload.max.size : 최대 저장 가능한 파일 크기(MB)
  3. file.upload.extension.list : 저장 가능한 확장자 설정
  4. file.upload.directory.temp : 임시저장 폴더
  5. file.directory.default : 기본 저장 폴더
  6. file.directory.{Job} : 업무별 저장 폴더
  
# Excel Create - (완료)
  1. Template 파일을 만들어 엑셀 형식을 저장한다.
  2. ExcelDataService.getExcelDataList 에 조회할 데이터 서비스를 추가한다. 
  3. 미흡한점
     - 템플릿 파일에 배경색 설정시 org.apache.poi.ss.usermodel.IndexedColors을 참조하여 Short Type의 컬러값을 세팅해야 한다.   
     - 좀 더 다양한 유형의 엑셀 속성 사용 가능하도록 업그레이드 필요
     
# Excel Upload - (완료)
  1. Template 파일을 만들어 엑셀 형식을 저장한다.
  2. 하나의 파일만 읽어 분석한다. 
  3. 미흡한점
     - 데이터 시작점이 지정되어 있음.

# 메일 발송
  - 메일 발송 히스토리 저장 - (완료)
  - application-{Profile}.properties 에 메일 관련 설정(비번 설필 필요) - (완료)
  - 1인에게 텍스트 메일 보내기 - (완료)
  - 다수에게 텍스트 메일 보내기 - (완료)
  - 텍스트 메일 파일 첨부하여 보내기 - (완료)
  - 1인에게 템플릿 메일 보내기 - (완료)
  - 다수에게 템플릿 메일 보내기 - (완료)
  - 템플릿 메일 파일 첨부하여 보내기 - (완료)

# 보안
  - 암호화 모듈 개발
    Key : resources/properties/security/security-{Profile}.properties파일에 "security.aes.key"로 설정
  - CSRF를 이용한 데이터 호출 체크

# REST API
  - Swagger : http://localhost:8080/mini/swagger-ui.html#/

# Batch

# Profile
  1. VM arguments에 [-Dspring.profiles.active=local] 설정 추가
  2. Spring Boot 설정파일
     application-{Profile}.properties
  3. 파일업로드/다운로드
     resources/properties/file/file-{Profile}.properties
  4. LogBack 설정
     resources/logback/logback-config-{Profile}.properties

# 오류 페이지 사용자 정의
  1. application-{Profile}.properties 에서 Whitelabel 오류 페이지 비활성화
  	 server.error.whitelabel.enabled=false
  2. resources/properties/common.properties에 오류 페이지 소스 위치 설정
     404, 500, DEFAULT
  3. com.jein.mini.common.controller.CustomErrorController 에서 추가 기능 개발 가능
  
# Design 확인하기 
  1. resources/templete/design/{파일명} 디자인 파일 생성 및 개발
  2. http://localhost:8080/mini/sample/design/{파일명} 호출로 확인
    
 # Script 기능
   - AJAX
     1. 파일 업로드
     2. 데이터 통신
   - Popup
     1. Layer Popup - (완료)
        jquery load 이용하여 페이지 호출
     2. Window Popup - (완료)
        Window Popup Layout Template Open
        Template에서 jquery load 이용하여 페이지 호출
     3. 기본 Popup Design 적용
   - JqGrid
     1. Select Box를 jqgrid 옵션으로 생성시 데이터 세팅이 value값이 아닌 label값으로 선택되므로 새로운 방식으로 생성할 필요가 있음. 
   - Cookie
     1. Cookie 업데이트 - (완료)
     2. Cookie 가져오기 - (완료)
   - 로딩바
     1. 로딩바 보이기- (완료)
     2. 로딩바 숨기기- (완료)
   - 달력
     1. jquery-ui를 이용하여 생성 - (완료)
     2. 세팅 관련 Function 만들기- (완료)
     
    
 # 개발 완료 URL
   - 로그인
     http://localhost:8080/mini/common/login  jeinsoft/jein0915!
   - Sample
     http://localhost:8080/mini/sample/view/sample{01-03}
   - Design
     http://localhost:8080/mini/sample/design/{파일명}
     
